#ifndef KSALGO_H
#define KSALGO_H

#include <stdbool.h>

/* KsalgoNote structure represents a single note generated by the Karplus-Strong algorithm. */
typedef struct {
    bool active;         /* Indicates whether the note is currently playing. */
    int buffer_pos;      /* Current position in the buffer. */
    int buffer_size;     /* Size of the buffer. */
    float *buffer;       /* Circular buffer containing the samples of the note. */
    float decay;         /* Decay factor that determines how quickly the note fades out. */
} KsalgoNote;

/**
 * Initializes a KsalgoNote structure.
 * @param note Pointer to the KsalgoNote structure to be initialized.
 */
void ksalgo_init_note(KsalgoNote *note);

/**
 * Starts playing a note with the specified frequency, decay, buffer_multiplier, and sample_rate.
 * @param note Pointer to the KsalgoNote structure.
 * @param frequency Frequency of the note to be played.
 * @param decay Decay factor of the note (value between 0 and 1).
 * @param buffer_multiplier The factor by which the buffer size will be increased.
 * @param sample_rate The sample rate of the audio system (in Hz).
 */
void ksalgo_start_note(KsalgoNote *note, float frequency, float decay, int buffer_multiplier, int sample_rate);

/**
 * Stops playing a note.
 * @param note Pointer to the KsalgoNote structure.
 */
void ksalgo_stop_note(KsalgoNote *note);

/**
 * Frees resources associated with a note.
 * @param note Pointer to the KsalgoNote structure.
 */
void ksalgo_free_note(KsalgoNote* note);

/**
 * Generates the next audio sample for a note.
 * @param note Pointer to the KsalgoNote structure.
 * @return The next audio sample as a float.
 */
float ksalgo_process_note(KsalgoNote *note);

/**
 * Mixes the audio output from multiple notes into a single buffer.
 * @param notes Pointer to an array of KsalgoNote structures.
 * @param notes_size Number of notes in the array.
 * @param buffer Output buffer to store the mixed audio samples.
 * @param buffer_size Size of the output buffer.
 */
void ksalgo_mix_audio(KsalgoNote* notes, int notes_size, float *buffer, int buffer_size);

#endif /* KSALGO_H */

